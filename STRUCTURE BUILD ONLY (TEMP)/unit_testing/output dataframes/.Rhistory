}
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
"Correlation Coefficient" = (cormat)[lt],
pvalues = pmat[lt]
)
}
res2<-rcorr(as.matrix(data))
corr_matrix <- flattenCorrMatrix(res2$r, res2$P)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation.Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
res2<-rcorr(as.matrix(data))
corr_matrix <- flattenCorrMatrix(res2$r, res2$P)
corr_matrix$adjusted_pvalues = p.adjust(corr_matrix$p, method = "BH")
corr_matrix
library("writexl")
write_xlsx(corr_matrix, "D:/Desktop_current/NPSoftware/GitHub/df5_r_output.xlsx")
write_xlsx(corr_matrix, "D:/Desktop_current/NPSoftware/GitHub/df5_r_output.xlsx")
?p.adjust
l)
library("Hmisc")
library("writexl")
data <- read_excel("D:/Deskto
library(readxl)
library("Hmisc")
library("writexl")
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
library("readxl")
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
round(cor(data, method="pearson"), 2)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation.Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
res2<-rcorr(as.matrix(data))
corr_matrix <- flattenCorrMatrix(res2$r, res2$P)
corr_matrix$adjusted_pvalues = p.adjust(corr_matrix$p, method = "BH")
corr_matrix
setwd("D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes")
library("readxl")
library("Hmisc")
library("writexl")
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation.Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
?rcorr
res <- rcorr(as.matrix(data), type="pearson")
res <- rcorr(as.matrix(data), type=c("pearson"))
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type=c("pearson"))
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
res
res <- rcorr(as.matrix(data), type="spearman")
res
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res2$r, res2$P)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation.Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
corr_matrix <- flattenCorrMatrix(res2$r, res2$P)
corr_matrix <- flattenCorrMatrix(res$r, res$P)
corr_matrix$adjusted_pvalues = p.adjust(corr_matrix$p, method = "BH")
write_xlsx(corr_matrix, "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output data
/raw_corr_pearson_fdrBH_raiseErrors_R.xlsx")
write_xlsx(corr_matrix, "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes
/raw_corr_pearson_fdrBH_raiseErrors_R.xlsx")
write_xlsx(corr_matrix, "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes/raw_corr_pearson_fdrBH_raiseErrors_R.xlsx")
write_xlsx(corr_matrix, "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes/
raw_corr_pearson_fdrBH_raiseErrors_R.xlsx")
base_dir = "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes/"
write_xlsx(corr_matrix, base_dir + "raw_corr_pearson_fdrBH_raiseErrors_R.xlsx")
write_xlsx(corr_matrix, paste(base_dir + "raw_corr_pearson_fdrBH_raiseErrors_R.xlsx"))
write_xlsx(corr_matrix, paste(base_dir, "raw_corr_pearson_fdrBH_raiseErrors_R.xlsx"))
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
corr_matrix$adjusted_pvalues = p.adjust(corr_matrix$p, method = "BH")
write_xlsx(corr_matrix, paste(base_dir, "raw_corr_pearson_fdrBH_raiseErrors_R.xlsx"))
write_xlsx(corr_matrix, paste(base_dir, "raw_corr_pearson_fdrBH_raiseErrors_R.xlsx"))
write_xlsx(corr_matrix, paste(base_dir, "raw_corr_pearson_fdrBH_raiseErrors_R.xlsx", sep=""))
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
print(rownames(cormat)[col(cormat)[lt]])
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
corr_matrix <- flattenCorrMatrix(res$r, res$P)
type(corr_matrix)
typeof(corr_matrix)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
print(rownames(cormat)[col(cormat)[lt]])
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = c(),
CI_high = c(),
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
res <- rcorr(as.matrix(data), type="pearson")
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
?vector
vector(mode="numeric", length = 10)
vector(mode="numeric", length = corr_matrix$Variable1)
vector(mode="numeric", length = length(corr_matrix$Variable1))
a <- corr_matrix
install.packages("psychometric")
library("writexl")
library("psychometric")
a <- corr_matrix
a <- mutate(.data = a, CI_low = CIr(r = Correlation_Coefficient,
n = min(length(data$Variable1), length(data$Variable2))
))
library("dplyr")
a <- corr_matrix
a <- mutate(.data = a, CI_low = CIr(r = Correlation_Coefficient,
n = min(length(data$Variable1), length(data$Variable2))
))
b <- "a"
data$b
data[b]
a <- corr_matrix
a <- mutate(.data = a, CI_low = CIr(r = Correlation_Coefficient,
n = min(length(data[Variable1]), length(data[Variable2]))
))
CIr(0.5, 100)
CIr(0.5, 100)[1]
a$CI_low = CIr(r = a$Correlation_Coefficient,
n = min(length(data[a$Variable1]), length(data[a$Variable2]))
)[1]
View(a)
View(a)
levels(a$Variable1)[a$Variable1]
a$Variable1
a$Variable1 = levels(a$Variable1)[a$Variable1]
a$Variable2 = levels(a$Variable2)[a$Variable2]
a$CI_low = CIr(r = a$Correlation_Coefficient,
n = min(length(data[a$Variable1]), length(data[a$Variable2]))
)[1]
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
print(rownames(cormat)[col(cormat)[lt]])
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="any", length = length(Variable1)), #empty
CI_high = vector(mode="any", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
base_dir = "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes/"
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
print(rownames(cormat)[col(cormat)[lt]])
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="any", length = length(Variable1)), #empty
CI_high = vector(mode="any", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="any", length = length(Variable1)), #empty
CI_high = vector(mode="any", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
corr_matrix <- flattenCorrMatrix(res$r, res$P)
?vector
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="list", length = length(Variable1)), #empty
CI_high = vector(mode="list", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
length(lt)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="list", length = length(Variable1)), #empty
CI_high = vector(mode="list", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
corr_matrix <- flattenCorrMatrix(res$r, res$P)
base_dir = "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes/"
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
length(lt)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="list", length = length(Variable1)), #empty
CI_high = vector(mode="list", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
print(length(lt))
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="list", length = length(Variable1)), #empty
CI_high = vector(mode="list", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
print(length(rownames(cormat)))
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="list", length = length(Variable1)), #empty
CI_high = vector(mode="list", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
corr_matrix <- flattenCorrMatrix(res$r, res$P)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
print(length(rownames(cormat)[col(cormat)[lt]]))
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="list", length = length(Variable1)), #empty
CI_high = vector(mode="list", length = length(Variable1)), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
corr_matrix <- flattenCorrMatrix(res$r, res$P)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
df_length = length(rownames(cormat)[col(cormat)[lt]])
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
CI_low = vector(mode="list", length = df_length), #empty
CI_high = vector(mode="list", length = df_length), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
corr_matrix <- flattenCorrMatrix(res$r, res$P)
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
#df_length = length(rownames(cormat)[col(cormat)[lt]])
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
#CI_low = vector(mode="list", length = df_length), #empty
#CI_high = vector(mode="list", length = df_length), #empty
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
corr_matrix <- flattenCorrMatrix(res$r, res$P)
corr_matrix$adjusted_pvalues = p.adjust(corr_matrix$p, method = "BH")
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
corr_matrix$adjusted_pvalues = p.adjust(corr_matrix$p, method = "BH")
a <- corr_matrix
a$CI_low = CIr(r = a$Correlation_Coefficient,
n = min(length(data[a$Variable1]), length(data[a$Variable2]))
)[1]
a$Variable1 = levels(a$Variable1)[a$Variable1]
a$Variable2 = levels(a$Variable2)[a$Variable2]
a$CI_low = CIr(r = a$Correlation_Coefficient,
n = min(length(data[a$Variable1]), length(data[a$Variable2]))
)[1]
a$CI_low = CIr(r = a$Correlation_Coefficient[1],
n = min(length(data[a$Variable1]), length(data[a$Variable2]))
)[1]
View(a)
View(a)
length(data[a$Variable1])
length(data[a$Variable1])[1]
a$CI_low = CIr(r = a$Correlation_Coefficient,
n = min(length(data[a$Variable1])[1], length(data[a$Variable2])[1])
)[1]
r <- a$Correlation_Coefficient
a$CI_low = CIr(r = r,
n = min(length(data[a$Variable1])[1], length(data[a$Variable2])[1])
)[1]
a$CI_low = CIr(r = 0.5,
n = min(length(data[a$Variable1])[1], length(data[a$Variable2])[1])
)[1]
a$CI_low = CIr(r = 0.5,
n = min(length(data[a$Variable1]), length(data[a$Variable2]))
)[1]
a$n = min(length(data[a$Variable1]), length(data[a$Variable2]))
a$CI_low = CIr(r = a$Correlation_Coefficient,
n = min(length(data[a$Variable1]), length(data[a$Variable2]))
)[1]
typeof(a$Correlation_Coefficient)
a[1, "CI_low"] = 5
a[2, "CI_low"] = 3
for (row in 1:length(a)) {
print(row)
}
a[7, "CI_low"] = 3
a <- corr_matrix
for (row in 1:length(a)-1) {
a[row, "CI_low"] = CIr(r = a[row, "Correlation_Coefficient"],
n = min(length(data[a[row, "Variable1"]]),
length(data[a[row, "Variable2"]])))
}
a$Variable1 = levels(a$Variable1)[a$Variable1]
a$Variable2 = levels(a$Variable2)[a$Variable2]
for (row in 1:length(a)-1) {
a[row, "CI_low"] = CIr(r = a[row, "Correlation_Coefficient"],
n = min(length(data[a[row, "Variable1"]]),
length(data[a[row, "Variable2"]])))
}
length(data[a[5, "Variable1"]]
length(data[a[5, "Variable1"]])
a[5, "Variable1"]
data[a[5, "Variable1"]]
legth(data[a[5, "Variable1"]])
length(data[a[5, "Variable1"]])
length(data[a[5, "Variable1"]].rownames)
length(rownames(data[a[5, "Variable1"]]))
for (row in 1:length(a)-1) {
a[row, "CI_low"] = CIr(r = a[row, "Correlation_Coefficient"],
n = min(length(rownames(data[a[row, "Variable1"]])),
length(rownames(data[a[row, "Variable2"]]))))
}
for (row in 1:length(a)-1) {
a[row, "CI_low"] = CIr(r = a[row, "Correlation_Coefficient"],
n = min(length(rownames(data[a[row, "Variable1"]])),
length(rownames(data[a[row, "Variable2"]]))))[1]
}
for (row in 1:length(a)-1) {
print(row)
a[row, "CI_low"] = CIr(r = a[row, "Correlation_Coefficient"],
n = min(length(rownames(data[a[row, "Variable1"]])),
length(rownames(data[a[row, "Variable2"]]))))[1]
}
for (row in 1:length(a)) {
print(row)
a[row, "CI_low"] = CIr(r = a[row, "Correlation_Coefficient"],
n = min(length(rownames(data[a[row, "Variable1"]])),
length(rownames(data[a[row, "Variable2"]]))))[1]
}
for (row in 1:length(a)) {
curr_r = a[row, "Correlation_Coefficient"]
curr_n = min(length(rownames(data[a[row, "Variable1"]])),
length(rownames(data[a[row, "Variable2"]])))
a[row, "CI_low"] = CIr(r = curr_r, n = curr_n)[1]
a[row, "CI_high"] = CIr(r = curr_r, n = curr_n)[2]
}
base_dir = "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes/"
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
corr_matrix$adjusted_pvalues = p.adjust(corr_matrix$p, method = "BH")
corr_matrix$Variable1 = levels(corr_matrix$Variable1)[corr_matrix$Variable1]
corr_matrix$Variable2 = levels(corr_matrix$Variable2)[corr_matrix$Variable2]
for (row in 1:length(corr_matrix)) {
curr_r = corr_matrix[row, "Correlation_Coefficient"]
curr_n = min(length(rownames(data[corr_matrix[row, "Variable1"]])),
length(rownames(data[corr_matrix[row, "Variable2"]])))
corr_matrix[row, "CI_low"] = CIr(r = curr_r, n = curr_n)[1]
corr_matrix[row, "CI_high"] = CIr(r = curr_r, n = curr_n)[2]
}
corr_matrix <- corr_matrix[, c("Variable1", "Variable2", "Correlation_Coefficient",
"CI_low", "CI_high", "pvalues", "adjusted_pvalues")]
write_xlsx(corr_matrix, paste(base_dir, "raw_corr_pearson_fdrBH_raiseErrors_R.xlsx", sep=""))
View(corr_matrix)
View(corr_matrix)
for (row in 1:length(corr_matrix)) {
print(row)
curr_r = corr_matrix[row, "Correlation_Coefficient"]
curr_n = min(length(rownames(data[corr_matrix[row, "Variable1"]])),
length(rownames(data[corr_matrix[row, "Variable2"]])))
corr_matrix[row, "CI_low"] = CIr(r = curr_r, n = curr_n)[1]
corr_matrix[row, "CI_high"] = CIr(r = curr_r, n = curr_n)[2]
}
base_dir = "D:/Desktop_current/NPSoftware/GitHub/Unit testing/output dataframes/"
flattenCorrMatrix <- function(cormat, pmat) {
lt <- lower.tri(cormat)
data.frame(
Variable1 = rownames(cormat)[col(cormat)[lt]],
Variable2 = rownames(cormat)[row(cormat)[lt]],
Correlation_Coefficient = (cormat)[lt],
pvalues = pmat[lt]
)
}
data <- read_excel("D:/Desktop_current/NPSoftware/GitHub/df5.xlsx")
res <- rcorr(as.matrix(data), type="pearson")
corr_matrix <- flattenCorrMatrix(res$r, res$P)
length(corr_matrix)
length(rownames(corr_matrix))
corr_matrix$Variable1 = levels(corr_matrix$Variable1)[corr_matrix$Variable1]
corr_matrix$Variable2 = levels(corr_matrix$Variable2)[corr_matrix$Variable2]
for (row in 1:length(rownames(corr_matrix))) {
print(row)
curr_r = corr_matrix[row, "Correlation_Coefficient"]
curr_n = min(length(rownames(data[corr_matrix[row, "Variable1"]])),
length(rownames(data[corr_matrix[row, "Variable2"]])))
corr_matrix[row, "CI_low"] = CIr(r = curr_r, n = curr_n)[1]
corr_matrix[row, "CI_high"] = CIr(r = curr_r, n = curr_n)[2]
}
View(corr_matrix)
View(corr_matrix)
corr_matrix <- corr_matrix[, c("Variable1", "Variable2", "Correlation_Coefficient",
"CI_low", "CI_high", "pvalues", "adjusted_pvalues")]
corr_matrix$adjusted_pvalues = p.adjust(corr_matrix$p, method = "BH")
corr_matrix <- corr_matrix[, c("Variable1", "Variable2", "Correlation_Coefficient",
"CI_low", "CI_high", "pvalues", "adjusted_pvalues")]
write_xlsx(corr_matrix, paste(base_dir, "raw_corr_pearson_fdrBH_raiseErrors_R.xlsx", sep=""))
